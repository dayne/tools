#!/usr/bin/env ruby
# http://github.com/dayne/tools/raw/master/digest/sha1rbs
# tar cf - /nexus/stash/ | sha1rbs | nc targetbox 3003
# nc -l 3003 | sha1rbs | tar xf - 
require 'digest/sha1'
KILO = 1024
MEGS = 1024 * 1024
GIGS = 1024 * 1024 * 1024
BORED = 180
start = Time.now
awhileago = start
digest = Digest::SHA1.new
size = 0
count = 0
STDERR.puts "starting... "
began = false
while( r = STDIN.read(KILO) ) do
  digest << r
  unless began
    start = awhileago = Time.now
    STDERR.puts "data send began"
    began = true
  end
  size += 1024
  if (size / GIGS) != count
    count = size / GIGS
    STDERR.puts "#{count}G: #{digest.hexdigest} - #{Time.now - start}"
    STDERR.flush
  end
  if ( Time.now - awhileago ) > BORED
    STDERR.puts "#{size/MEGS.to_i}M : #{digest.hexdigest} - #{(Time.now - start).to_i}\n" 
    awhileago = Time.now
  end
  STDOUT << r
end
STDERR.puts "done... #{count} : #{digest.hexdigest} "
STDOUT.close
STDIN.close
exit
